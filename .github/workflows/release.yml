name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  extract-version:
    name: Extract Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract version from setup.py
        id: extract_version
        run: |
          content=$(cat setup.py)
          version=$(echo "$content" | grep -Po '(?<=version=\")[^\"]+')
          echo "::set-output name=version::$version"

  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    needs: extract-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: |
          python setup.py sdist bdist_wheel
          for file in dist/*.whl; do mv "$file" "${file%.whl}-linux.whl"; done
          mkdir -p output
          cp dist/*-linux.whl output/

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    needs: extract-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Build
        run: |
          python setup.py sdist bdist_wheel
          mkdir -p output
          Get-ChildItem -Path dist\*.whl | Rename-Item -NewName { $_.Name -replace '\.whl$', '-windows.whl' }
          Copy-Item -Path dist\*-windows.whl -Destination output\

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ needs.extract-version.outputs.version }}"
          name: Release v${{ needs.extract-version.outputs.version }}
          body: |
            Release for commit ${{ github.sha }}.
          files: |
            output/*-linux.whl
            output/*-windows.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
