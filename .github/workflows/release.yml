name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          cd linux
          docker build -t layout_editor_linux -f Dockerfile .

      - name: Run Docker container
        run: |
          docker run --name layout_editor_container layout_editor_linux
          docker cp layout_editor_container:/usr/src/app/dist linux/dist
          docker rm layout_editor_container

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-dist
          path: linux/dist/*.tar.gz

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install dependencies
        run: |
          pip install wheel
          cd windows
          python setup.py sdist bdist_wheel

      - name: Upload release asset
        uses: actions/upload-artifact@v2
        with:
          name: windows-dist
          path: windows/dist/*.tar.gz

  create-release:
    name: Create GitHub Release
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Linux build artifact
        uses: actions/download-artifact@v2
        with:
          name: linux-dist
          path: linux/dist

      - name: Download Windows build artifact
        uses: actions/download-artifact@v2
        with:
          name: windows-dist
          path: windows/dist

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          body: |
            Release for commit ${{ github.sha }}.
          draft: false
          prerelease: false

      - name: Upload Linux artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: linux/dist/*.tar.gz
          asset_name: linux-dist.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows/dist/*.tar.gz
          asset_name: windows-dist.tar.gz
          asset_content_type: application/gzip
