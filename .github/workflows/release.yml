name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel

      - name: Build
        run: |
          python setup.py sdist bdist_wheel

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-wheels
          path: dist/

  build-windows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel

      - name: Build
        run: |
          python setup.py sdist bdist_wheel
          Get-ChildItem -Path dist\*.whl | ForEach-Object {
            $newName = $_.Name -replace 'any\.whl$', 'win_amd64.whl'
            Rename-Item -Path $_.FullName -NewName $newName
          }

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-wheels
          path: dist/

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux-wheels
          path: output/linux

      - name: Download Windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows-wheels
          path: output/windows

      - name: Extract version from setup.py
        id: extract_version
        run: |
          content=$(cat setup.py)
          version=$(echo "$content" | grep -Po '(?<=version=\")[^\"]+')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.VERSION }}"
          name: Release v${{ env.VERSION }}
          body: |
            Release for commit ${{ github.sha }}.
          files: |
            output/linux/*.whl
            output/windows/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
